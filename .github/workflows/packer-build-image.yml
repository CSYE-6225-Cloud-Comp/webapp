name: Build Packer Template
on:
    pull_request:
        types:
            - closed
jobs:
    if-merged:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        env:
            DB_HOST: ${{ vars.DB_HOST }}
            DB_PORT: ${{ vars.DB_PORT }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_SCHEMA: ${{ vars.DB_SCHEMA }}
            DB_DIALECT: ${{ vars.DB_DIALECT }}
            DB_TIMEZONE: ${{ vars.DB_TIMEZONE }}  
            GITHUB_WORKSPACE: ${{ github.workspace }}
            PRODUCT_VERSION: "latest"
            GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
            SERVER_PORT: ${{ vars.SERVER_PORT }}
            VM_DB_USER: ${{ secrets.VM_DB_USER }}
            VM_DB_PASSWORD: ${{ secrets.VM_DB_PASSWORD }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup MYSQL
              run: |
                sudo /lib/systemd/systemd-sysv-install enable mysql
                sudo systemctl enable mysql.service
                sudo systemctl start mysql.service
                sudo systemctl status mysql.service
                sudo mysql --user=$DB_USER --password=$DB_PASSWORD -e "CREATE DATABASE $DB_SCHEMA"

            - name: Create .env file
              run: |
                touch $GITHUB_WORKSPACE/.env
                echo "DB_HOST=$DB_HOST" >> .env
                echo "DB_PORT=$DB_PORT" >> .env
                echo "DB_USER=$VM_DB_USER" >> .env
                echo "DB_PASSWORD=$VM_DB_PASSWORD" >> .env
                echo "DB_SCHEMA=$DB_SCHEMA" >> .env
                echo "DB_DIALECT=$DB_DIALECT" >> .env
                echo "DB_TIMEZONE=$DB_TIMEZONE" >> .env
                echo "GCP_CREDENTIALS=$GCP_CREDENTIALS" >> .env
                echo "SERVER_PORT=$SERVER_PORT" >> .env
                cat .env

            - name: Zip Repository
              run: zip -r webapp.zip .
               .
            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                node-version: '18.x'

            - name: Install Dependencies
              run: npm install

            - name: Run Integration Tests
              run: npm test 

            - name: Setup `packer`
              uses: hashicorp/setup-packer@main
              id: setup
              with:
                version: ${{ env.PRODUCT_VERSION }}

            - id: 'auth'
              uses: 'google-github-actions/auth@v2'
              with:
                credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      
            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v2'
      
            - name: 'Use gcloud CLI'
              run: 'gcloud info'
              
            - name: Initialize Packer
              run: packer init $GITHUB_WORKSPACE/packer/centos.pkr.hcl

            - name: Build Packer Template
              run: packer build $GITHUB_WORKSPACE/packer/centos.pkr.hcl